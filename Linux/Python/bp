#!/usr/bin/env python
import getpass
import os
import sys
import time
import decimal
"""
The way I use this is I put it in my root folder for easy access and set it as an executable using 
sudo chmod +x /bp
And whenever I want to use it, I just type /bp in the terminal.
"""

os.system('cls' if os.name == 'nt' else 'reset')
localtime = time.strftime("%D %H:%M%p")

CurrentUser = getpass.getuser()
BookProgressDir = "/home/%s/Documents/BookProgress"%CurrentUser
os.chdir(BookProgressDir)
topdir = "."

exten = '.txt'
AllBooks = []
for dirpath, dirnames, files in os.walk(topdir):
	for name in files:
		if name.lower().endswith(exten):
			if "_Progress" in name:
				continue
			OPEN = open("%s/%s"%(dirpath,name),mode="r")
			for line in OPEN:
				AllBooks.append([name.replace(exten, "")] + line.split(";"))
			OPEN.close()

for x in range(len(AllBooks)):
	a = float(AllBooks[x][1][:-2])
	b = float(AllBooks[x][2])
	print("{:<2}\n{:<6}{:<5}/{:<5}\n{:<6}{:<9}\n".format(\
	AllBooks[x][0],
	AllBooks[x][1],
	AllBooks[x][2],
	a*b/100,
	AllBooks[x][3],
	AllBooks[x][4]))

	"""
    a = "{:<2}\n{:<6}{:<6}\n{:<9}{:<9}\n"
    b = a.format(*AllBooks[x])
    """

Book = raw_input("Book: ")
Progress = input("Progress: ")

print("\n\n")
def UpdateBookProgress(BookTitle, CurrentPage):

	BookProgressDir = "/home/tom/Documents/BookProgress"

	try:
		os.chdir("%s/%s"%(BookProgressDir,BookTitle))
	except OSError:
		
		print("Progress hasn't been recorded for this book yet")
		os.mkdir("%s/%s"%(BookProgressDir,BookTitle))
		os.chdir("%s/%s"%(BookProgressDir,BookTitle))
		BookLength = input("Book Length: ")
		Percentage = (CurrentPage * 100)/BookLength
		Percentage = round(Percentage,2)
		Book = open("%s.txt"%BookTitle, mode = "w")
		Book.write("%s%% ;%s ;%s ;%s " % (str(Percentage),BookLength,localtime,localtime))
		Book = open("%s.txt"%BookTitle, mode = "r")
		Book.close()
		Progress = open("%s_Progress.txt"%BookTitle,mode="w")
		
		Progress.write("%s;%s;%s\n"%(CurrentPage,round(Percentage,2),localtime))
		Progress.close()
		return

	Book = open("%s.txt"%BookTitle,mode="r")
	BookHash = {}
	for line in Book:
		(BookHash['PercentageComplete'],BookHash['Length'],BookHash['DateStarted'],BookHash['LastAccessed']) = line.split(";")
	
	
	Percentage = (CurrentPage * 100)/float(BookHash['Length'])
	Percentage = round(Percentage,2)
	if CurrentPage > BookHash['Length']:
		print("Current page is higher than book Length")
		print("Book length: %s\n\n"%BookHash['Length'])
		return

	CheckArray = []
	Progress = open("%s_Progress.txt"%BookTitle, mode="r")
	for line in Progress:
		CheckArray.append(line.split(";"))

	if(CurrentPage <= int(CheckArray[-1][0])):
		print("No progress was actually made today")
		print("\tProgress last made on %s\tPercentange complete: %s    (%s/%s)\n\n"%(CheckArray[-1][2],CheckArray[-1][1],CheckArray[-1][0],BookHash['Length']))
		return
	else:
		Progress = open("%s_Progress.txt"%BookTitle, mode="a")
		Progress.write("%s;%s;%s\n"%(CurrentPage,Percentage,localtime))

		Progress = open("%s_Progress.txt"%BookTitle, mode="r")
		Book = open("%s.txt"%BookTitle, mode="w")
		Book.write( "%s%% ;%s ;%s ;%s " % (str(Percentage) ,BookHash['Length'],BookHash['DateStarted'],localtime ))
		
		print(Progress.read())
		print("\n\n\tProgress: \n\t\t%s/%s\n\t\tPercent complete: %s\n\t\t%s\n\n"%(CurrentPage,BookHash['Length'],round(Percentage,2),localtime))
		Progress.close()
		Book.close()

UpdateBookProgress(Book, Progress)
